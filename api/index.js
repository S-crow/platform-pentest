var express = require('express');
var cors = require('cors');
const bodyParser = require('body-parser');
var mongoose = require('mongoose');
var ejs = require('ejs');

var UserSchema = new mongoose.Schema({
	name: String,
	user: String,
	pass: String
});

var User = mongoose.model('User', UserSchema);


[['Administrator', 'admin', 'password42'], ['User', 'user', 'user42']].forEach(function (cred) {
	var instance = new User();

	instance.name = cred[0];
	instance.user = cred[1];
	instance.pass = cred[2];

	instance.save();
});


var app = express();
var urlencodedParser = bodyParser.urlencoded({extended: true});
app.use(urlencodedParser);
app.use(bodyParser.json());
app.use(cors());

// app.set('views', __dirname);
// app.set('view engine', 'jade');

// app.set('views', __dirname + '/views');
// app.engine('html', require('ejs').renderFile);

//app.set('view engine', 'ejs');

app.use(require('body-parser').urlencoded({extended: true}));

app.get('/', function(req, res) {
	// res.render('index.html', {});
	// res.sendFile(__dirname + "/script/css/" + "index.css");
});

app.get('/connexion', function(req, res) {
	// res.render('connexion.html', {});
});

app.get('/register', function(req, res) {
	res.render('register.html', {});
});

app.post('/connexion', function(req, res) {
	User.findOne({user: req.body.user, pass: req.body.pass}, function (err, user) {
		if (err) {
			return res.status(500).json({
				message: err.message
			})
		}

		if (!user) {
			return res.status(401).json({
				message: "Erreur identifiant/mdp"
			})
		}

		return res.status(200).json({message: 'Welcome back ' + user.name + '!!!'});
	});
});

var server = app.listen(49090, function () {
	mongoose.connect('mongodb://localhost/platform-pentest');

	console.log('listening on port %d', server.address().port);
});

